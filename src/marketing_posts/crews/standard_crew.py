"""
–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è crew –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞.
"""

from typing import List
from crewai import Agent, Task
from marketing_posts.core.base_crew import BaseCrew
from marketing_posts.core.config_manager import ConfigManager


class StandardCrew(BaseCrew):
    """
    –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è crew –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞.
    
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã –∏ –∑–∞–¥–∞—á–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
    –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è.
    """
    
    def _validate_config(self) -> None:
        """–í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ crew."""
        if not self.config.agents_config or not self.config.tasks_config:
            raise ValueError(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ø—É—Ç–∏ –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º –∞–≥–µ–Ω—Ç–æ–≤ –∏ –∑–∞–¥–∞—á"
            )
    
    def _initialize_crew(self) -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ crew."""
        self.config_manager = ConfigManager()
        print("üè¢ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã –∏ –∑–∞–¥–∞—á–∏")
    
    def lead_market_analyst(self) -> Agent:
        """–í–µ–¥—É—â–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫ —Ä—ã–Ω–∫–∞."""
        agents_config = self.config_manager.get_agents_config()
        analyst_config = agents_config.get('lead_market_analyst', {})
        
        return Agent(
            role=analyst_config.get('role', '–í–µ–¥—É—â–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫ —Ä—ã–Ω–∫–∞'),
            goal=analyst_config.get(
                'goal', '–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–∫–∞'
            ),
            backstory=analyst_config.get(
                'backstory', '–û–ø—ã—Ç–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ —Å 10+ –ª–µ—Ç –æ–ø—ã—Ç–∞'
            ),
            verbose=True,
            allow_delegation=False,
            llm=self.llm
        )
    
    def chief_marketing_strategist(self) -> Agent:
        """–ì–ª–∞–≤–Ω—ã–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π —Å—Ç—Ä–∞—Ç–µ–≥."""
        agents_config = self.config_manager.get_agents_config()
        strategist_config = agents_config.get('chief_marketing_strategist', {})
        
        return Agent(
            role=strategist_config.get(
                'role', '–ì–ª–∞–≤–Ω—ã–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π —Å—Ç—Ä–∞—Ç–µ–≥'
            ),
            goal=strategist_config.get(
                'goal', '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π'
            ),
            backstory=strategist_config.get(
                'backstory', '–°—Ç—Ä–∞—Ç–µ–≥ —Å –æ–ø—ã—Ç–æ–º –≤ –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö'
            ),
            verbose=True,
            allow_delegation=False,
            llm=self.llm
        )
    
    def creative_content_creator(self) -> Agent:
        """–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞."""
        agents_config = self.config_manager.get_agents_config()
        creator_config = agents_config.get('creative_content_creator', {})
        
        return Agent(
            role=creator_config.get(
                'role', '–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
            ),
            goal=creator_config.get(
                'goal', '–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
            ),
            backstory=creator_config.get(
                'backstory', '–ö—Ä–µ–∞—Ç–∏–≤—â–∏–∫ —Å –±–æ–≥–∞—Ç—ã–º –æ–ø—ã—Ç–æ–º'
            ),
            verbose=True,
            allow_delegation=False,
            llm=self.llm
        )
    
    def research_task(self) -> Task:
        """–ó–∞–¥–∞—á–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ä—ã–Ω–∫–∞."""
        tasks_config = self.config_manager.get_tasks_config()
        research_config = tasks_config.get('research_task', {})
        
        return Task(
            description=research_config.get(
                'description', '–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞'
            ),
            agent=self.lead_market_analyst(),
            expected_output=research_config.get(
                'expected_output', '–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞'
            ),
            output_format='raw'
        )
    
    def project_understanding_task(self) -> Task:
        """–ó–∞–¥–∞—á–∞ –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞."""
        tasks_config = self.config_manager.get_tasks_config()
        understanding_config = tasks_config.get(
            'project_understanding_task', {}
        )
        
        return Task(
            description=understanding_config.get(
                'description', '–ò–∑—É—á–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç'
            ),
            agent=self.lead_market_analyst(),
            expected_output=understanding_config.get(
                'expected_output', '–ü–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞'
            ),
            output_format='raw'
        )
    
    def marketing_strategy_task(self) -> Task:
        """–ó–∞–¥–∞—á–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏."""
        tasks_config = self.config_manager.get_tasks_config()
        strategy_config = tasks_config.get('marketing_strategy_task', {})
        
        return Task(
            description=strategy_config.get(
                'description', '–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é'
            ),
            agent=self.chief_marketing_strategist(),
            expected_output=strategy_config.get(
                'expected_output', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è'
            ),
            output_format='raw'
        )
    
    def campaign_idea_task(self) -> Task:
        """–ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–¥–µ–π –∫–∞–º–ø–∞–Ω–∏–π."""
        tasks_config = self.config_manager.get_tasks_config()
        campaign_config = tasks_config.get('campaign_idea_task', {})
        
        return Task(
            description=campaign_config.get(
                'description', '–°–æ–∑–¥–∞–π—Ç–µ –∏–¥–µ–∏ –∫–∞–º–ø–∞–Ω–∏–π'
            ),
            agent=self.chief_marketing_strategist(),
            expected_output=campaign_config.get(
                'expected_output', '–ò–¥–µ–∏ –∫–∞–º–ø–∞–Ω–∏–π'
            ),
            output_format='raw'
        )
    
    def copy_creation_task(self) -> Task:
        """–ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥–∞."""
        tasks_config = self.config_manager.get_tasks_config()
        copy_config = tasks_config.get('copy_creation_task', {})
        
        return Task(
            description=copy_config.get('description', '–°–æ–∑–¥–∞–π—Ç–µ –∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥'),
            agent=self.creative_content_creator(),
            expected_output=copy_config.get('expected_output', '–ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥'),
            output_format='raw'
        )
    
    def get_agents(self) -> List[Agent]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ crew."""
        return [
            self.lead_market_analyst(),
            self.chief_marketing_strategist(),
            self.creative_content_creator()
        ]
    
    def get_tasks(self) -> List[Task]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ crew."""
        return [
            self.research_task(),
            self.project_understanding_task(),
            self.marketing_strategy_task(),
            self.campaign_idea_task(),
            self.copy_creation_task()
        ] 